<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>steve&#39;s blog</title>
  
  <subtitle>welcome!</subtitle>
  <link href="http://stevezjq.github.io/atom.xml" rel="self"/>
  
  <link href="http://stevezjq.github.io/"/>
  <updated>2024-11-26T12:30:24.756Z</updated>
  <id>http://stevezjq.github.io/</id>
  
  <author>
    <name>stevezjq</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sudo/sudo_debug格式化字符串漏洞</title>
    <link href="http://stevezjq.github.io/posts/72ce4e2b.html"/>
    <id>http://stevezjq.github.io/posts/72ce4e2b.html</id>
    <published>2024-11-26T12:16:54.000Z</published>
    <updated>2024-11-26T12:30:24.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sudo-sudo-debug格式化字符串漏洞"><a href="#Sudo-sudo-debug格式化字符串漏洞" class="headerlink" title="Sudo/sudo_debug格式化字符串漏洞"></a>Sudo/sudo_debug格式化字符串漏洞</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><h4 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h4><p>​    学习漏洞的基本原理，通过对漏洞的复现，了解格式化字符串漏洞的成因和利用方式，特别是在关键系统组件Sudo中的表现形式。掌握如何定位代码中的漏洞点，如何通过恶意输入触发漏洞，并通过调试工具验证利用的有效性。提升安全防护意识通过实验，认识格式化字符串漏洞对系统安全的威胁，理解其可能的攻击后果。熟悉漏洞修复过程，并验证修复措施的有效性。模拟实际攻击过程中可能的条件和操作步骤，为后续在生产环境中发现和应对类似漏洞积累经验。提高综合能力，通过实验提升在漏洞复现中的综合能力，包括环境搭建、源码调试、漏洞利用和修复验证等环节的实践技巧。</p><h4 id="复现目标"><a href="#复现目标" class="headerlink" title="复现目标"></a>复现目标</h4><p>​    通过输入恶意格式化字符串代码，致使存在漏洞版本的sudo触发漏洞，泄露敏感信息，泄露内存地址，进而实现任意代码执行等非法操作。</p><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><pre><code>操作机/靶机：VMware Ubuntu64位虚拟机系统及版本：Ubuntu 12.04sudo版本：sudo1.8.3p1使用工具：终端、代码编辑器本机配置：win11家庭版 16G主存 </code></pre><h2 id="实验原理"><a href="#实验原理" class="headerlink" title="实验原理"></a>实验原理</h2><h4 id="环境变量、调试模式及源码引入"><a href="#环境变量、调试模式及源码引入" class="headerlink" title="环境变量、调试模式及源码引入"></a>环境变量、调试模式及源码引入</h4><p>​    CVE-2012-0809 是一种由格式化字符串引发的漏洞，SUDO_DEBUG 是触发漏洞的关键条件之一：当 Sudo 启用了 —enable-debug 编译选项时，SUDO_DEBUG 环境变量的值会被 sudo_debug 函数解析。漏洞的核心问题是，sudo_debug 函数未安全地处理 SUDO_DEBUG 的输入，导致格式化字符串攻击的发生。</p><p>​    此外，sudo_debug函数的源代码也值得研究。以下代码取自受漏洞影响的 Sudo 版本：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sudo_debug</span><span class="params">(<span class="type">int</span> level, <span class="type">const</span> <span class="type">char</span> *fmt, ...)</span> &#123;</span><br><span class="line">    va_list ap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sudo_debug_enabled) &#123;</span><br><span class="line">        va_start(ap, fmt);</span><br><span class="line">        <span class="built_in">vfprintf</span>(sudo_debug_file, fmt, ap);  <span class="comment">// 漏洞点：未验证格式化字符串</span></span><br><span class="line">        va_end(ap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="源码漏洞点分析"><a href="#源码漏洞点分析" class="headerlink" title="源码漏洞点分析"></a>源码漏洞点分析</h4><p>​    函数参数 fmt 是一个格式化字符串，用于定义 vfprintf 的格式。问题在于：fmt 是直接从用户输入传入的（例如通过环境变量 SUDO_DEBUG），没有进行任何校验。攻击者可以通过在 SUDO_DEBUG 的值中插入格式化字符串（如 %n），强制 vfprintf 执行意外操作，写入指定内存地址。vfprintf 是一个变参函数，支持多种格式化指令（如 %s、%d、%n）。%n 指令会将已写入字符的数量存储到一个指定的内存地址。如果攻击者构造恶意的 fmt 参数，可能导致：写入任意内存地址、修改关键变量（如函数指针）、进一步实现权限提升或代码执行。</p><p>​    漏洞触发条件：Sudo 被编译时启用了 —enable-debug，环境变量 SUDO_DEBUG 被设置为恶意值。</p><h4 id="漏洞核心问题"><a href="#漏洞核心问题" class="headerlink" title="漏洞核心问题"></a>漏洞核心问题</h4><p>缺乏输入验证：</p><p>​    fmt 参数的来源是环境变量 SUDO_DEBUG，属于外部输入，但代码未对其进行过滤或校验。<br>理想情况下，fmt 应是开发者定义的固定格式字符串，而不是用户输入。</p><p>错误的日志处理设计：</p><p>​    调试日志的实现直接依赖于外部可控的字符串，未遵循安全的日志记录实践。<br>函数滥用：</p><p>​    使用了变参函数（如 vfprintf）处理未可信的输入，进一步增加了攻击面。</p><h4 id="修复方式"><a href="#修复方式" class="headerlink" title="修复方式"></a>修复方式</h4><p>​    在后续版本中（如 Sudo 1.8.3p2），开发者修复了该漏洞，通过改进 sudo_debug 函数的实现，避免格式化字符串漏洞：</p><p>固定格式字符串：</p><p>​    确保格式化字符串是固定值，而非用户可控输入：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fprintf</span>(sudo_debug_file, <span class="string">&quot;%s&quot;</span>, user_input);  <span class="comment">// 安全的日志记录</span></span><br></pre></td></tr></table></figure><br>严格校验：</p><p>​    对环境变量 SUDO_DEBUG 的值进行解析和验证，防止恶意内容的注入。<br>替换不安全函数：</p><p>​    使用安全函数（如 snprintf）替换容易产生漏洞的变参函数。</p><h4 id="攻击方式"><a href="#攻击方式" class="headerlink" title="攻击方式"></a>攻击方式</h4><p>​    攻击者可通过精心构造的格式化字符串，利用 %n /%x/%s等格式化字符串指令构造恶意代码触发漏洞，泄露敏感信息，向指定内存地址写入数据，进而实现任意代码执行等非法操作。</p><h2 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h2><h4 id="1-Ubuntu旧版本下载以及sudo版本回滚"><a href="#1-Ubuntu旧版本下载以及sudo版本回滚" class="headerlink" title="1. Ubuntu旧版本下载以及sudo版本回滚"></a>1. Ubuntu旧版本下载以及sudo版本回滚</h4><p>​    通过查阅资料可知，CVE-2012-0809漏洞高概率存在于Ubuntu10.04~12.04版本中。若Ubuntu版本过高，则会降低对sudo版本的兼容性。在互联网上寻找Ubuntu12.04 ISO镜像文件下载：</p><p><img src="../img/屏幕截图 2024-11-26 135728.png" alt="1"></p><p>​    具体安装过程以及系统初始化设置此处略过。</p><p>​    打开刚刚装好的Ubuntu12.04终端，输入命令<code>wget https://www.sudo.ws/dist/sudo-1.8.3p1.tar.gz</code>下载旧版本的sudo1.8.3p1安装包：</p><p><img src="../img/屏幕截图 2024-11-26 143808.png" alt="屏幕截图 2024-11-26 143808"></p><p>​    解压并进入目录：</p><p><img src="../img/屏幕截图 2024-11-26 150747.png" alt="屏幕截图 2024-11-26 150747"></p><p><img src="../img/屏幕截图 2024-11-26 145747.png" alt="屏幕截图 2024-11-26 145747"></p><p>​    配置并安装旧版本sudo：</p><p><img src="../img/屏幕截图 2024-11-26 152502.png" alt="屏幕截图 2024-11-26 152502"></p><p>​    查看sudo版本，安装成功：</p><p><img src="../img/屏幕截图 2024-11-26 152633.png" alt="屏幕截图 2024-11-26 152633"></p><h4 id="2-恶意代码编写及测试"><a href="#2-恶意代码编写及测试" class="headerlink" title="2. 恶意代码编写及测试"></a>2. 恶意代码编写及测试</h4><p>​    通过编写容易触发漏洞的恶意代码，向sudo_debug函数传递字符和格式化字符串，进而触发当前sudo版本的漏洞。具体原理上述已经提及，此处不再赘述。</p><p>​    恶意代码如下：</p><p><img src="../img/屏幕截图 2024-11-26 153530.png" alt="屏幕截图 2024-11-26 153530"></p><p>​    赋予其可执行权限：</p><p><img src="../img/屏幕截图 2024-11-26 153729.png" alt="屏幕截图 2024-11-26 153729"></p><p>​    此时，由于我们还没有编辑sudo_debug环境变量以及调试功能，故上述代码运行结果应该为正常结果：</p><p><img src="../img/屏幕截图 2024-11-26 183131.png" alt="屏幕截图 2024-11-26 183131"></p><h4 id="3-配置环境变量、打开调试模式"><a href="#3-配置环境变量、打开调试模式" class="headerlink" title="3. 配置环境变量、打开调试模式"></a>3. 配置环境变量、打开调试模式</h4><p>​    查阅案例资料可知，sudo漏洞触发于打开调试模式之后。当 Sudo 启用了 —enable-debug 编译选项时，SUDO_DEBUG 环境变量的值会被 sudo_debug 函数解析。漏洞的核心问题是，sudo_debug 函数未安全地处理 SUDO_DEBUG 的输入，导致格式化字符串攻击的发生。首先，我们将SUDO_DEBUG环境变量设置为1~9之间任意一个数，此处我将其设置为9以获得最详细的调试信息：</p><p><img src="../img/屏幕截图 2024-11-26 193220.png" alt="屏幕截图 2024-11-26 193220"></p><p>​    同时，我们需要使用visudo，修改sudoer文件的内容，添加一行<code>Default debug</code>以辅助开启调试模式：</p><p><img src="../img/屏幕截图 2024-11-26 194213.png" alt="屏幕截图 2024-11-26 194213"></p><p><img src="../img/屏幕截图 2024-11-26 194330.png" alt="屏幕截图 2024-11-26 194330"></p><h4 id="4-漏洞复现及分析"><a href="#4-漏洞复现及分析" class="headerlink" title="4. 漏洞复现及分析"></a>4. 漏洞复现及分析</h4><p>​    经过第3步的操作后，sudo_debug调试模式已被打开，可以向该函数传入格式化字符串并触发漏洞。此时我们再次运行test.sh文件，结果如下：</p><p><img src="../img/屏幕截图 2024-11-26 194749.png" alt="屏幕截图 2024-11-26 194749"></p><p>​    分析可知，除了打印出AAAA原本应该打印出的内容，第5~第12字符还打印出了字符‘A’的16进制ASCII码，第13~第28字符打印出了内存地址，后4字节则为栈上内容。</p><h4 id="5-漏洞修复"><a href="#5-漏洞修复" class="headerlink" title="5. 漏洞修复"></a>5. 漏洞修复</h4><p>​    要想修复上述漏洞，可以下载并安装修复版本的sudo（1.8.3p2及以上），这个方法当然也是最有效的，此处不再演示此方法。</p><p>​    此处我们使用的方法是删除sudoer.tmp文件中添加的代码并将环境变量SUDO_DEBUG的值置null：</p><p><img src="../img/屏幕截图 2024-11-26 195651.png" alt="屏幕截图 2024-11-26 195651"></p><p>再次运行test.sh文件，输出结果回到正常：</p><p><img src="../img/屏幕截图 2024-11-26 195852.png" alt="屏幕截图 2024-11-26 195852"></p><h2 id="实验总结"><a href="#实验总结" class="headerlink" title="实验总结"></a>实验总结</h2><p>​    通过实验，我们成功复现了 sudo_debug 函数的格式化字符串漏洞，证明了攻击者可以利用该漏洞执行任意代码。实验显示，该漏洞仅在 Sudo 启用调试模式的情况下可被利用。</p><p>​    格式化字符串漏洞虽然常见，但在关键组件 Sudo中，影响尤其严重。此类漏洞的防范主要依赖于严格的输入验证和正确的格式化字符串使用方法。</p><p>​    修复建议：使用安全的字符串函数（如 snprintf）代替不安全的函数、在调试信息中避免直接处理用户输入、及时升级到修复该漏洞的 Sudo 版本（如 1.8.3p2）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Sudo-sudo-debug格式化字符串漏洞&quot;&gt;&lt;a href=&quot;#Sudo-sudo-debug格式化字符串漏洞&quot; class=&quot;headerlink&quot; title=&quot;Sudo/sudo_debug格式化字符串漏洞&quot;&gt;&lt;/a&gt;Sudo/sudo_debug格式</summary>
      
    
    
    
    <category term="编程" scheme="http://stevezjq.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="漏洞" scheme="http://stevezjq.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>html基础语法简述汇总</title>
    <link href="http://stevezjq.github.io/posts/ba881b0.html"/>
    <id>http://stevezjq.github.io/posts/ba881b0.html</id>
    <published>2024-05-16T08:08:27.000Z</published>
    <updated>2024-11-26T12:14:29.021Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>8大排序算法汇总</title>
    <link href="http://stevezjq.github.io/posts/a1f7af40.html"/>
    <id>http://stevezjq.github.io/posts/a1f7af40.html</id>
    <published>2024-05-16T08:04:36.000Z</published>
    <updated>2024-05-16T08:08:48.002Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>c++实现AES加密算法</title>
    <link href="http://stevezjq.github.io/posts/83a1182.html"/>
    <id>http://stevezjq.github.io/posts/83a1182.html</id>
    <published>2024-04-29T08:49:12.000Z</published>
    <updated>2024-04-29T10:57:03.873Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> plants[<span class="number">16</span>][<span class="number">8</span>];</span><br><span class="line"><span class="type">int</span>* plantxt_array[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="type">int</span> keys[<span class="number">176</span>][<span class="number">8</span>];</span><br><span class="line"><span class="type">int</span>* round_key_array[<span class="number">4</span>][<span class="number">44</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">int</span> SBOX[<span class="number">16</span>][<span class="number">16</span>] = &#123;</span><br><span class="line">&#123;<span class="number">0x63</span>, <span class="number">0x7c</span>, <span class="number">0x77</span>, <span class="number">0x7b</span>, <span class="number">0xf2</span>, <span class="number">0x6b</span>, <span class="number">0x6f</span>, <span class="number">0xc5</span>, <span class="number">0x30</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x2b</span>, <span class="number">0xfe</span>, <span class="number">0xd7</span>, <span class="number">0xab</span>, <span class="number">0x76</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xca</span>, <span class="number">0x82</span>, <span class="number">0xc9</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0xf0</span>, <span class="number">0xad</span>, <span class="number">0xd4</span>, <span class="number">0xa2</span>, <span class="number">0xaf</span>, <span class="number">0x9c</span>, <span class="number">0xa4</span>, <span class="number">0x72</span>, <span class="number">0xc0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xb7</span>, <span class="number">0xfd</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3f</span>, <span class="number">0xf7</span>, <span class="number">0xcc</span>, <span class="number">0x34</span>, <span class="number">0xa5</span>, <span class="number">0xe5</span>, <span class="number">0xf1</span>, <span class="number">0x71</span>, <span class="number">0xd8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x04</span>, <span class="number">0xc7</span>, <span class="number">0x23</span>, <span class="number">0xc3</span>, <span class="number">0x18</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x9a</span>, <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xe2</span>, <span class="number">0xeb</span>, <span class="number">0x27</span>, <span class="number">0xb2</span>, <span class="number">0x75</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0x2c</span>, <span class="number">0x1a</span>, <span class="number">0x1b</span>, <span class="number">0x6e</span>, <span class="number">0x5a</span>, <span class="number">0xa0</span>, <span class="number">0x52</span>, <span class="number">0x3b</span>, <span class="number">0xd6</span>, <span class="number">0xb3</span>, <span class="number">0x29</span>, <span class="number">0xe3</span>, <span class="number">0x2f</span>, <span class="number">0x84</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x53</span>, <span class="number">0xd1</span>, <span class="number">0x00</span>, <span class="number">0xed</span>, <span class="number">0x20</span>, <span class="number">0xfc</span>, <span class="number">0xb1</span>, <span class="number">0x5b</span>, <span class="number">0x6a</span>, <span class="number">0xcb</span>, <span class="number">0xbe</span>, <span class="number">0x39</span>, <span class="number">0x4a</span>, <span class="number">0x4c</span>, <span class="number">0x58</span>, <span class="number">0xcf</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xd0</span>, <span class="number">0xef</span>, <span class="number">0xaa</span>, <span class="number">0xfb</span>, <span class="number">0x43</span>, <span class="number">0x4d</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xf9</span>, <span class="number">0x02</span>, <span class="number">0x7f</span>, <span class="number">0x50</span>, <span class="number">0x3c</span>, <span class="number">0x9f</span>, <span class="number">0xa8</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x51</span>, <span class="number">0xa3</span>, <span class="number">0x40</span>, <span class="number">0x8f</span>, <span class="number">0x92</span>, <span class="number">0x9d</span>, <span class="number">0x38</span>, <span class="number">0xf5</span>, <span class="number">0xbc</span>, <span class="number">0xb6</span>, <span class="number">0xda</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xff</span>, <span class="number">0xf3</span>, <span class="number">0xd2</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xcd</span>, <span class="number">0x0c</span>, <span class="number">0x13</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xc4</span>, <span class="number">0xa7</span>, <span class="number">0x7e</span>, <span class="number">0x3d</span>, <span class="number">0x64</span>, <span class="number">0x5d</span>, <span class="number">0x19</span>, <span class="number">0x73</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4f</span>, <span class="number">0xdc</span>, <span class="number">0x22</span>, <span class="number">0x2a</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x46</span>, <span class="number">0xee</span>, <span class="number">0xb8</span>, <span class="number">0x14</span>, <span class="number">0xde</span>, <span class="number">0x5e</span>, <span class="number">0x0b</span>, <span class="number">0xdb</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xe0</span>, <span class="number">0x32</span>, <span class="number">0x3a</span>, <span class="number">0x0a</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x24</span>, <span class="number">0x5c</span>, <span class="number">0xc2</span>, <span class="number">0xd3</span>, <span class="number">0xac</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xe4</span>, <span class="number">0x79</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xe7</span>, <span class="number">0xc8</span>, <span class="number">0x37</span>, <span class="number">0x6d</span>, <span class="number">0x8d</span>, <span class="number">0xd5</span>, <span class="number">0x4e</span>, <span class="number">0xa9</span>, <span class="number">0x6c</span>, <span class="number">0x56</span>, <span class="number">0xf4</span>, <span class="number">0xea</span>, <span class="number">0x65</span>, <span class="number">0x7a</span>, <span class="number">0xae</span>, <span class="number">0x08</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xba</span>, <span class="number">0x78</span>, <span class="number">0x25</span>, <span class="number">0x2e</span>, <span class="number">0x1c</span>, <span class="number">0xa6</span>, <span class="number">0xb4</span>, <span class="number">0xc6</span>, <span class="number">0xe8</span>, <span class="number">0xdd</span>, <span class="number">0x74</span>, <span class="number">0x1f</span>, <span class="number">0x4b</span>, <span class="number">0xbd</span>, <span class="number">0x8b</span>, <span class="number">0x8a</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x70</span>, <span class="number">0x3e</span>, <span class="number">0xb5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">0x03</span>, <span class="number">0xf6</span>, <span class="number">0x0e</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xb9</span>, <span class="number">0x86</span>, <span class="number">0xc1</span>, <span class="number">0x1d</span>, <span class="number">0x9e</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xe1</span>, <span class="number">0xf8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xd9</span>, <span class="number">0x8e</span>, <span class="number">0x94</span>, <span class="number">0x9b</span>, <span class="number">0x1e</span>, <span class="number">0x87</span>, <span class="number">0xe9</span>, <span class="number">0xce</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xdf</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x8c</span>, <span class="number">0xa1</span>, <span class="number">0x89</span>, <span class="number">0x0d</span>, <span class="number">0xbf</span>, <span class="number">0xe6</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>, <span class="number">0x2d</span>, <span class="number">0x0f</span>, <span class="number">0xb0</span>, <span class="number">0x54</span>, <span class="number">0xbb</span>, <span class="number">0x16</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">int</span> Rcon[<span class="number">10</span>][<span class="number">4</span>][<span class="number">8</span>] = &#123;</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">int</span> MCarr[<span class="number">4</span>][<span class="number">4</span>] = &#123;</span><br><span class="line">&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>&#125;,</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">two_to_ten</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> b = a / <span class="number">1000</span>;</span><br><span class="line"><span class="type">int</span> c = a / <span class="number">100</span> - b * <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> d = a / <span class="number">10</span> - b * <span class="number">100</span> - c * <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> e = a - b * <span class="number">1000</span> - c * <span class="number">100</span> - d * <span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> e * <span class="number">1</span> + d * <span class="number">2</span> + c * <span class="number">4</span> + b * <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">hex_to_two</span><span class="params">(<span class="type">int</span> hex)</span> </span>&#123;</span><br><span class="line">string binary;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">binary.<span class="built_in">push_back</span>((hex &amp; (<span class="number">1</span> &lt;&lt; i)) ? <span class="string">&#x27;1&#x27;</span> : <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> binary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init_array</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> k0 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> k1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line">plantxt_array[i][j] = plants[k0++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">44</span>;j++) &#123;</span><br><span class="line">round_key_array[i][j] = keys[k1++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//10101101101001011010011100101111000110111011100101110111101001111010011101010011011111010110101111100110100101001110101110110010</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_plantxt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string input;</span><br><span class="line"><span class="type">int</span> bit = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入128bit的明文（已给出）：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; input;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line">plantxt_array[j][i][k] = input[bit++] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="comment">//此处i，j调换位置，因为aes存放数据是列优先。</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//11010110101001100111110101100111010110001111000111101010010011110010110101011010010011010111111101000111111011110010010100111011</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_keys</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string input;</span><br><span class="line"><span class="type">int</span> bit = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入128bit的密钥（已给出）：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; input;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line">round_key_array[j][i][k] = input[bit++] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Initial_round</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line">plantxt_array[j][i][k] = plantxt_array[j][i][k] ^ round_key_array[j][i][k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">T_func</span><span class="params">(<span class="type">int</span> a[<span class="number">4</span>][<span class="number">1</span>][<span class="number">8</span>], <span class="type">int</span> I)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> temp[<span class="number">8</span>];</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line">string X, Y;</span><br><span class="line"><span class="type">int</span> Temp = <span class="number">-1</span>;</span><br><span class="line"><span class="comment">//字循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i) &#123;</span><br><span class="line">temp[i] = a[<span class="number">0</span>][<span class="number">0</span>][i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">8</span>; ++j) &#123;</span><br><span class="line">a[i][<span class="number">0</span>][j] = a[i + <span class="number">1</span>][<span class="number">0</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i) &#123;</span><br><span class="line">a[<span class="number">3</span>][<span class="number">0</span>][i] = temp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//字节代换</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">8</span>;j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j &lt; <span class="number">4</span>) &#123;</span><br><span class="line">X += (a[i][<span class="number">0</span>][j] + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">Y += (a[i][<span class="number">0</span>][j] + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">x = <span class="built_in">stoi</span>(X);</span><br><span class="line">y = <span class="built_in">stoi</span>(Y);</span><br><span class="line">Temp = SBOX[<span class="built_in">two_to_ten</span>(x)][<span class="built_in">two_to_ten</span>(y)];</span><br><span class="line">string t = <span class="built_in">hex_to_two</span>(Temp);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> q = <span class="number">0</span>;q &lt; <span class="number">8</span>;q++) &#123;</span><br><span class="line">a[i][<span class="number">0</span>][q] = t[q] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//轮常量异或</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">8</span>;j++) &#123;</span><br><span class="line">a[i][<span class="number">0</span>][j] = a[i][<span class="number">0</span>][j] ^ Rcon[I / <span class="number">4</span> - <span class="number">1</span>][i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Key_expansion</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>;i &lt; <span class="number">44</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">4</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="type">int</span> temp[<span class="number">4</span>][<span class="number">1</span>][<span class="number">8</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> q = <span class="number">0</span>;q &lt; <span class="number">4</span>;q++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> e = <span class="number">0</span>;e &lt; <span class="number">8</span>;e++) &#123;</span><br><span class="line">temp[q][<span class="number">0</span>][e] = round_key_array[q][i - <span class="number">1</span>][e];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">T_func</span>(temp, i);</span><br><span class="line">round_key_array[j][i][k] = round_key_array[j][i - <span class="number">4</span>][k] ^ temp[j][<span class="number">0</span>][k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">round_key_array[j][i][k] = round_key_array[j][i - <span class="number">4</span>][k] ^ round_key_array[j][i - <span class="number">1</span>][k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SubBytes</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line">string X, Y;</span><br><span class="line"><span class="type">int</span> Temp;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (k &lt; <span class="number">4</span>) &#123;</span><br><span class="line">X += (plantxt_array[j][i][k] + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">Y += (plantxt_array[j][i][k] + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">x = <span class="built_in">stoi</span>(X);</span><br><span class="line">y = <span class="built_in">stoi</span>(Y);</span><br><span class="line">Temp = SBOX[<span class="built_in">two_to_ten</span>(x)][<span class="built_in">two_to_ten</span>(y)];</span><br><span class="line">string t = <span class="built_in">hex_to_two</span>(Temp);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> q = <span class="number">0</span>;q &lt; <span class="number">8</span>;q++) &#123;</span><br><span class="line">plantxt_array[j][i][q] = t[q] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ShiftRows</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span>* temp[<span class="number">8</span>];</span><br><span class="line"><span class="type">int</span>* temp1[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">temp[<span class="number">7</span>] = plantxt_array[i][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">3</span>;j++) &#123;</span><br><span class="line">plantxt_array[i][j] = plantxt_array[i][j + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">plantxt_array[i][<span class="number">3</span>] = temp[<span class="number">7</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span>) &#123;</span><br><span class="line">temp[<span class="number">7</span>] = plantxt_array[i][<span class="number">0</span>];</span><br><span class="line">temp1[<span class="number">7</span>] = plantxt_array[i][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">2</span>;j++) &#123;</span><br><span class="line">plantxt_array[i][j] = plantxt_array[i][j + <span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line">plantxt_array[i][<span class="number">2</span>] = temp[<span class="number">7</span>];</span><br><span class="line">plantxt_array[i][<span class="number">3</span>] = temp1[<span class="number">7</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">temp[<span class="number">7</span>] = plantxt_array[i][<span class="number">3</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">3</span>;j++) &#123;</span><br><span class="line">plantxt_array[i][j + <span class="number">1</span>] = plantxt_array[i][j];</span><br><span class="line">&#125;</span><br><span class="line">plantxt_array[i][<span class="number">0</span>] = temp[<span class="number">7</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">GF_func</span><span class="params">(<span class="type">int</span>* a[<span class="number">4</span>][<span class="number">4</span>], <span class="type">int</span> I, <span class="type">int</span> J, <span class="type">int</span> arr_num)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">8</span>] = &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"><span class="keyword">if</span> (arr_num == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a[I][J];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (arr_num == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[I][J][<span class="number">0</span>] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">7</span>;i++) &#123;</span><br><span class="line">a[I][J][i] = a[I][J][i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">a[I][J][<span class="number">7</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a[I][J];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">7</span>;i++) &#123;</span><br><span class="line">a[I][J][i] = a[I][J][i + <span class="number">1</span>] ^ arr[i];</span><br><span class="line">&#125;</span><br><span class="line">a[I][J][<span class="number">7</span>] = <span class="number">0</span> ^ arr[<span class="number">7</span>];</span><br><span class="line"><span class="keyword">return</span> a[I][J];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (arr_num == <span class="number">3</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[I][J][<span class="number">0</span>] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">7</span>;i++) &#123;</span><br><span class="line">a[I][J][i] = a[I][J][i + <span class="number">1</span>] ^ a[I][J][i];</span><br><span class="line">&#125;</span><br><span class="line">a[I][J][<span class="number">7</span>] = <span class="number">0</span> ^ a[I][J][<span class="number">7</span>];</span><br><span class="line"><span class="keyword">return</span> a[I][J];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">7</span>;i++) &#123;</span><br><span class="line">a[I][J][i] = (a[I][J][i + <span class="number">1</span>] ^ arr[i]) ^ a[I][J][i];</span><br><span class="line">&#125;</span><br><span class="line">a[I][J][<span class="number">7</span>] = (<span class="number">0</span> ^ arr[<span class="number">7</span>]) ^ a[I][J][<span class="number">7</span>];</span><br><span class="line"><span class="keyword">return</span> a[I][J];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MixColumns</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span>* temp[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="type">int</span>* temp1 = <span class="built_in">GF_func</span>(plantxt_array, i, j, <span class="number">2</span>);</span><br><span class="line"><span class="type">int</span>* temp2 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">1</span>, j, <span class="number">3</span>);</span><br><span class="line"><span class="type">int</span>* temp3 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">2</span>, j, <span class="number">1</span>);</span><br><span class="line"><span class="type">int</span>* temp4 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">3</span>, j, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line">temp[i][j][k] = temp1[k] ^ temp2[k] ^ temp3[k] ^ temp4[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="type">int</span>* temp1 = <span class="built_in">GF_func</span>(plantxt_array, i, j, <span class="number">1</span>);</span><br><span class="line"><span class="type">int</span>* temp2 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">1</span>, j, <span class="number">2</span>);</span><br><span class="line"><span class="type">int</span>* temp3 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">2</span>, j, <span class="number">3</span>);</span><br><span class="line"><span class="type">int</span>* temp4 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">3</span>, j, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line">temp[i][j][k] = temp1[k] ^ temp2[k] ^ temp3[k] ^ temp4[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="type">int</span>* temp1 = <span class="built_in">GF_func</span>(plantxt_array, i, j, <span class="number">1</span>);</span><br><span class="line"><span class="type">int</span>* temp2 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">1</span>, j, <span class="number">1</span>);</span><br><span class="line"><span class="type">int</span>* temp3 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">2</span>, j, <span class="number">2</span>);</span><br><span class="line"><span class="type">int</span>* temp4 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">3</span>, j, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line">temp[i][j][k] = temp1[k] ^ temp2[k] ^ temp3[k] ^ temp4[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="type">int</span>* temp1 = <span class="built_in">GF_func</span>(plantxt_array, i, j, <span class="number">3</span>);</span><br><span class="line"><span class="type">int</span>* temp2 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">1</span>, j, <span class="number">1</span>);</span><br><span class="line"><span class="type">int</span>* temp3 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">2</span>, j, <span class="number">1</span>);</span><br><span class="line"><span class="type">int</span>* temp4 = <span class="built_in">GF_func</span>(plantxt_array, i + <span class="number">3</span>, j, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line">temp[i][j][k] = temp1[k] ^ temp2[k] ^ temp3[k] ^ temp4[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line">plantxt_array[i][j] = temp[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AddRoundKey</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line">plantxt_array[j][i][k] = plantxt_array[j][i][k] ^ round_key_array[j][i + (a + <span class="number">1</span>) * <span class="number">4</span>][k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show_result</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string output;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++) &#123;</span><br><span class="line">output.<span class="built_in">push_back</span>(plantxt_array[i][j][k]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;密文为：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; output &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">init_array</span>();</span><br><span class="line"><span class="built_in">get_plantxt</span>();</span><br><span class="line"><span class="built_in">get_keys</span>();</span><br><span class="line"><span class="built_in">Initial_round</span>();<span class="comment">//初始变换</span></span><br><span class="line"><span class="built_in">Key_expansion</span>();<span class="comment">//扩展密钥</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> nine_rounds = <span class="number">0</span>;nine_rounds &lt; <span class="number">9</span>;nine_rounds++) &#123;</span><br><span class="line"><span class="built_in">SubBytes</span>();<span class="comment">//字节代换</span></span><br><span class="line"><span class="built_in">ShiftRows</span>();<span class="comment">//行移位</span></span><br><span class="line"><span class="built_in">MixColumns</span>();<span class="comment">//列混合</span></span><br><span class="line"><span class="built_in">AddRoundKey</span>(nine_rounds);<span class="comment">//轮密钥加</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">SubBytes</span>();</span><br><span class="line"><span class="built_in">ShiftRows</span>();</span><br><span class="line"><span class="built_in">AddRoundKey</span>(<span class="number">9</span>);</span><br><span class="line"><span class="built_in">show_result</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="编程" scheme="http://stevezjq.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="密码学" scheme="http://stevezjq.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>c++实现DES加密算法</title>
    <link href="http://stevezjq.github.io/posts/3bbdaf09.html"/>
    <id>http://stevezjq.github.io/posts/3bbdaf09.html</id>
    <published>2024-04-29T07:49:12.000Z</published>
    <updated>2024-04-29T10:52:55.211Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>涉及到非常多的数组变换，使用vector数组向量能很好的解决动态数组大小的问题。</p></div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstddef&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; no_rp;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; fi_rp;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; key64;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; key56;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; key48;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; L;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; R;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; L1;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; R1;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; D;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; aftersbox_P;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; temp;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; result;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_plaintxt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string input;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入明文：(1101100101101111110110100101111001011111011010110011101100000110)&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; input;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> digit : input) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">isdigit</span>(digit)) &#123;</span><br><span class="line">no_rp.<span class="built_in">push_back</span>(digit - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">first_exchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> ip[<span class="number">64</span>] = &#123;</span><br><span class="line"><span class="number">58</span>,  <span class="number">50</span>,  <span class="number">42</span>,  <span class="number">34</span>,  <span class="number">26</span>,  <span class="number">18</span>,  <span class="number">10</span>,  <span class="number">2</span>,</span><br><span class="line"><span class="number">60</span>,  <span class="number">52</span>,  <span class="number">44</span>,  <span class="number">36</span>,  <span class="number">28</span>,  <span class="number">20</span>,  <span class="number">12</span>,  <span class="number">4</span>,</span><br><span class="line"><span class="number">62</span>,  <span class="number">54</span>,  <span class="number">46</span>,  <span class="number">38</span>,  <span class="number">30</span>,  <span class="number">22</span>,  <span class="number">14</span>,  <span class="number">6</span>,</span><br><span class="line"><span class="number">64</span>,  <span class="number">56</span>,  <span class="number">48</span>,  <span class="number">40</span>,  <span class="number">32</span>,  <span class="number">24</span>,  <span class="number">16</span>,  <span class="number">8</span>,</span><br><span class="line"><span class="number">57</span>,  <span class="number">49</span>,  <span class="number">41</span>,  <span class="number">33</span>,  <span class="number">25</span>,  <span class="number">17</span>,  <span class="number">9</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="number">59</span>,  <span class="number">51</span>,  <span class="number">43</span>,  <span class="number">35</span>,  <span class="number">27</span>,  <span class="number">19</span>,  <span class="number">11</span>,  <span class="number">3</span>,</span><br><span class="line"><span class="number">61</span>,  <span class="number">53</span>,  <span class="number">45</span>,  <span class="number">37</span>,  <span class="number">29</span>,  <span class="number">21</span>,  <span class="number">13</span>,  <span class="number">5</span>,</span><br><span class="line"><span class="number">63</span>,  <span class="number">55</span>,  <span class="number">47</span>,  <span class="number">39</span>,  <span class="number">31</span>,  <span class="number">23</span>,  <span class="number">15</span>,  <span class="number">7</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">64</span>;i++) &#123;</span><br><span class="line">fi_rp.<span class="built_in">push_back</span>(no_rp[ip[i] - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">64</span>;i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">32</span>) &#123;</span><br><span class="line">L.<span class="built_in">push_back</span>(fi_rp[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">R.<span class="built_in">push_back</span>(fi_rp[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_key</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string input;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入密钥：（00010010 00111101 10101011 01110111 10011111 01100101 10000000 01100111）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; input;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> digit : input) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">isdigit</span>(digit)) &#123;</span><br><span class="line">key64.<span class="built_in">push_back</span>(digit - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> PC1[<span class="number">56</span>] = &#123;</span><br><span class="line"><span class="number">57</span>,<span class="number">49</span>,<span class="number">41</span>,<span class="number">33</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">9</span>,<span class="number">1</span>,</span><br><span class="line"><span class="number">58</span>,<span class="number">50</span>,<span class="number">42</span>,<span class="number">34</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">59</span>,<span class="number">51</span>,<span class="number">43</span>,<span class="number">35</span>,<span class="number">27</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">3</span>,</span><br><span class="line"><span class="number">60</span>,<span class="number">52</span>,<span class="number">44</span>,<span class="number">36</span>,<span class="number">28</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">61</span>,<span class="number">53</span>,<span class="number">45</span>,<span class="number">37</span>,<span class="number">29</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">5</span>,</span><br><span class="line"><span class="number">62</span>,<span class="number">54</span>,<span class="number">46</span>,<span class="number">38</span>,<span class="number">30</span>,<span class="number">22</span>,<span class="number">14</span>,<span class="number">6</span>,</span><br><span class="line"><span class="number">63</span>,<span class="number">55</span>,<span class="number">47</span>,<span class="number">39</span>,<span class="number">31</span>,<span class="number">23</span>,<span class="number">15</span>,<span class="number">7</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">56</span>;i++) &#123;</span><br><span class="line">key56.<span class="built_in">push_back</span>(key64[PC1[i] - <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">28</span>) &#123;</span><br><span class="line">C.<span class="built_in">push_back</span>(key56[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">D.<span class="built_in">push_back</span>(key56[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> tempc = C[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> tempd = D[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> ls[<span class="number">16</span>] = &#123;</span><br><span class="line"><span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; C.<span class="built_in">size</span>() - <span class="number">1</span>;i++) &#123;</span><br><span class="line">C[i] = C[i + ls[n]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; D.<span class="built_in">size</span>() - <span class="number">1</span>;i++) &#123;</span><br><span class="line">D[i] = D[i + ls[n]];</span><br><span class="line">&#125;</span><br><span class="line">C[C.<span class="built_in">size</span>() - <span class="number">1</span>] = tempc;</span><br><span class="line">D[D.<span class="built_in">size</span>() - <span class="number">1</span>] = tempd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PC2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> PC2[<span class="number">48</span>] = &#123;</span><br><span class="line"><span class="number">14</span>,<span class="number">17</span>,<span class="number">11</span>,<span class="number">24</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">28</span>,</span><br><span class="line"><span class="number">15</span>,<span class="number">6</span>,<span class="number">21</span>,<span class="number">10</span>,<span class="number">23</span>,<span class="number">19</span>,<span class="number">12</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">26</span>,<span class="number">8</span>,<span class="number">16</span>,<span class="number">7</span>,<span class="number">27</span>,<span class="number">20</span>,<span class="number">13</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">41</span>,<span class="number">52</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">47</span>,<span class="number">55</span>,<span class="number">30</span>,<span class="number">40</span>,</span><br><span class="line"><span class="number">51</span>,<span class="number">45</span>,<span class="number">33</span>,<span class="number">48</span>,<span class="number">44</span>,<span class="number">49</span>,<span class="number">39</span>,<span class="number">56</span>,</span><br><span class="line"><span class="number">34</span>,<span class="number">53</span>,<span class="number">46</span>,<span class="number">42</span>,<span class="number">50</span>,<span class="number">36</span>,<span class="number">29</span>,<span class="number">32</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">48</span>;i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">24</span>) &#123;</span><br><span class="line">key48.<span class="built_in">push_back</span>(C[PC2[i] - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">key48.<span class="built_in">push_back</span>(D[PC2[i] - <span class="number">29</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">two_ten</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a &lt;= <span class="number">11</span>) &#123;</span><br><span class="line"><span class="type">int</span> b = a / <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = a - b * <span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> c + b * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">int</span> b = a / <span class="number">1000</span>;</span><br><span class="line"><span class="type">int</span> c = a / <span class="number">100</span> - b * <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> d = a / <span class="number">10</span> - b * <span class="number">100</span> - c * <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> e = a - b * <span class="number">1000</span> - c * <span class="number">100</span> - d * <span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> e + d * <span class="number">2</span> + c * <span class="number">4</span> + b * <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">ten_two</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line">string ret = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="type">int</span> temp = a % <span class="number">2</span>;</span><br><span class="line">ret = <span class="built_in">to_string</span>(temp) + ret;</span><br><span class="line">a /= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ret.<span class="built_in">length</span>() &lt; <span class="number">4</span>)</span><br><span class="line">ret = <span class="string">&quot;0&quot;</span> + ret;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">S_BOX</span><span class="params">(<span class="type">int</span>* PC2E, vector&lt;<span class="type">int</span>&gt;&amp; aftersbox)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> sbox[<span class="number">4</span>][<span class="number">16</span>] = &#123;</span><br><span class="line">&#123;<span class="number">14</span>, <span class="number">4</span>, <span class="number">13</span>,<span class="number">1</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">5</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">7</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>,<span class="number">15</span>,<span class="number">7</span>, <span class="number">4</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">1</span>,<span class="number">10</span>,<span class="number">6</span>, <span class="number">12</span>, <span class="number">11</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">8</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">1</span>, <span class="number">14</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">6</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">5</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;<span class="number">15</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">6</span>, <span class="number">13</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">8</span>;i++) &#123;</span><br><span class="line"><span class="type">int</span> tempx = PC2E[i * <span class="number">6</span> - <span class="number">5</span>] * <span class="number">1000</span> + PC2E[i * <span class="number">6</span> - <span class="number">4</span>] * <span class="number">100</span> + PC2E[i * <span class="number">6</span> - <span class="number">3</span>] * <span class="number">10</span> + PC2E[i * <span class="number">6</span> - <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> tempy = PC2E[i * <span class="number">6</span> - <span class="number">6</span>] * <span class="number">10</span> + PC2E[i * <span class="number">6</span> - <span class="number">1</span>];</span><br><span class="line">string get_sbox = <span class="built_in">ten_two</span>(sbox[<span class="built_in">two_ten</span>(tempy)][<span class="built_in">two_ten</span>(tempx)]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> a : get_sbox) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">isdigit</span>(a)) &#123;</span><br><span class="line">aftersbox.<span class="built_in">push_back</span>(a - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">wheel_func</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> E[<span class="number">48</span>] = &#123;</span><br><span class="line"><span class="number">32</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,</span><br><span class="line"><span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,</span><br><span class="line"><span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,</span><br><span class="line"><span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,</span><br><span class="line"><span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">28</span>,<span class="number">29</span>,</span><br><span class="line"><span class="number">28</span>,<span class="number">29</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">32</span>,<span class="number">1</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> PC2E[<span class="number">48</span>];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; aftersbox;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">48</span>;i++) &#123;</span><br><span class="line">R1.<span class="built_in">push_back</span>(R[E[i] - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">48</span>;i++) &#123;</span><br><span class="line">PC2E[i] = <span class="built_in">bit_xor</span>&lt;<span class="type">int</span>&gt;()(R1[i], E[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">S_BOX</span>(PC2E, aftersbox);</span><br><span class="line"><span class="type">int</span> P_BOX[<span class="number">32</span>] = &#123;</span><br><span class="line"><span class="number">16</span>, <span class="number">7</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">29</span>,<span class="number">12</span>,<span class="number">28</span>,<span class="number">17</span>,</span><br><span class="line"><span class="number">1</span>, <span class="number">15</span>,<span class="number">23</span>,<span class="number">26</span>,<span class="number">5</span>,<span class="number">18</span>,<span class="number">31</span>,<span class="number">10</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">8</span>,<span class="number">24</span>,<span class="number">14</span>,<span class="number">32</span>,<span class="number">27</span>,<span class="number">3</span>, <span class="number">9</span>,</span><br><span class="line"><span class="number">19</span>,<span class="number">13</span>,<span class="number">30</span>, <span class="number">6</span>,<span class="number">22</span>,<span class="number">11</span>, <span class="number">4</span>,<span class="number">25</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">32</span>;i++) &#123;</span><br><span class="line">aftersbox_P.<span class="built_in">push_back</span>(aftersbox[P_BOX[i] - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">second_change</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> IP_1[<span class="number">64</span>] = &#123;</span><br><span class="line"><span class="number">40</span>,  <span class="number">8</span>,  <span class="number">48</span>,  <span class="number">16</span>,  <span class="number">56</span>,  <span class="number">24</span>,  <span class="number">64</span>,  <span class="number">32</span>,</span><br><span class="line"><span class="number">39</span>,  <span class="number">7</span>,  <span class="number">47</span>,  <span class="number">15</span>,  <span class="number">55</span>,  <span class="number">23</span>,  <span class="number">63</span>,   <span class="number">31</span>,</span><br><span class="line"><span class="number">38</span>,  <span class="number">6</span>,  <span class="number">46</span>,  <span class="number">14</span>,  <span class="number">54</span>,  <span class="number">22</span>,  <span class="number">62</span>,  <span class="number">30</span>,</span><br><span class="line"><span class="number">37</span>,  <span class="number">5</span>,  <span class="number">45</span>,  <span class="number">13</span>,  <span class="number">53</span>,  <span class="number">21</span>,  <span class="number">61</span>,  <span class="number">29</span>,</span><br><span class="line"><span class="number">36</span>,  <span class="number">4</span>,  <span class="number">44</span>,  <span class="number">12</span>,  <span class="number">52</span>,  <span class="number">20</span>,   <span class="number">60</span>,  <span class="number">28</span>,</span><br><span class="line"><span class="number">35</span>,  <span class="number">3</span>,  <span class="number">43</span>,  <span class="number">11</span>,  <span class="number">51</span>,  <span class="number">19</span>,   <span class="number">59</span>,  <span class="number">27</span>,</span><br><span class="line"><span class="number">34</span>,  <span class="number">2</span>,  <span class="number">42</span>,  <span class="number">10</span>,  <span class="number">50</span>,  <span class="number">18</span>,   <span class="number">58</span>,  <span class="number">26</span>,</span><br><span class="line"><span class="number">33</span>,  <span class="number">1</span>,  <span class="number">41</span>,  <span class="number">9</span>,   <span class="number">49</span>,  <span class="number">17</span>,   <span class="number">57</span>,  <span class="number">25</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">64</span>;i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">32</span>) &#123;</span><br><span class="line">temp.<span class="built_in">push_back</span>(L[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">temp.<span class="built_in">push_back</span>(R[i - <span class="number">32</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">64</span>;i++) &#123;</span><br><span class="line">result.<span class="built_in">push_back</span>(temp[IP_1[i] - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">get_plaintxt</span>();</span><br><span class="line"><span class="built_in">first_exchange</span>();</span><br><span class="line"><span class="built_in">get_key</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">16</span>;i++) &#123;</span><br><span class="line"><span class="built_in">loop</span>(i);</span><br><span class="line"><span class="built_in">PC2</span>();</span><br><span class="line"><span class="built_in">wheel_func</span>();</span><br><span class="line"><span class="type">int</span> temp = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">32</span>;j++) &#123;</span><br><span class="line">temp = R[j];</span><br><span class="line">R[j] = <span class="built_in">bit_xor</span>&lt;<span class="type">int</span>&gt;()(L[j], aftersbox_P[j]);</span><br><span class="line">L[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">second_change</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;密文为：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i : result) &#123;</span><br><span class="line">cout &lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;涉及到非常多的数组变换，使用vector数组向量能很好的解决动态数组大小的问题。&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="编程" scheme="http://stevezjq.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="密码学" scheme="http://stevezjq.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>python实现SM4加密算法</title>
    <link href="http://stevezjq.github.io/posts/a8007556.html"/>
    <id>http://stevezjq.github.io/posts/a8007556.html</id>
    <published>2024-04-29T06:49:12.000Z</published>
    <updated>2024-04-29T10:52:55.202Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">Sbox = [</span><br><span class="line">    <span class="number">0xd6</span>, <span class="number">0x90</span>, <span class="number">0xe9</span>, <span class="number">0xfe</span>, <span class="number">0xcc</span>, <span class="number">0xe1</span>, <span class="number">0x3d</span>, <span class="number">0xb7</span>,</span><br><span class="line">    <span class="number">0x16</span>, <span class="number">0xb6</span>, <span class="number">0x14</span>, <span class="number">0xc2</span>, <span class="number">0x28</span>, <span class="number">0xfb</span>, <span class="number">0x2c</span>, <span class="number">0x05</span>,</span><br><span class="line">    <span class="number">0x2b</span>, <span class="number">0x67</span>, <span class="number">0x9a</span>, <span class="number">0x76</span>, <span class="number">0x2a</span>, <span class="number">0xbe</span>, <span class="number">0x04</span>, <span class="number">0xc3</span>,</span><br><span class="line">    <span class="number">0xaa</span>, <span class="number">0x44</span>, <span class="number">0x13</span>, <span class="number">0x26</span>, <span class="number">0x49</span>, <span class="number">0x86</span>, <span class="number">0x06</span>, <span class="number">0x99</span>,</span><br><span class="line">    <span class="number">0x9c</span>, <span class="number">0x42</span>, <span class="number">0x50</span>, <span class="number">0xf4</span>, <span class="number">0x91</span>, <span class="number">0xef</span>, <span class="number">0x98</span>, <span class="number">0x7a</span>,</span><br><span class="line">    <span class="number">0x33</span>, <span class="number">0x54</span>, <span class="number">0x0b</span>, <span class="number">0x43</span>, <span class="number">0xed</span>, <span class="number">0xcf</span>, <span class="number">0xac</span>, <span class="number">0x62</span>,</span><br><span class="line">    <span class="number">0xe4</span>, <span class="number">0xb3</span>, <span class="number">0x1c</span>, <span class="number">0xa9</span>, <span class="number">0xc9</span>, <span class="number">0x08</span>, <span class="number">0xe8</span>, <span class="number">0x95</span>,</span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0xdf</span>, <span class="number">0x94</span>, <span class="number">0xfa</span>, <span class="number">0x75</span>, <span class="number">0x8f</span>, <span class="number">0x3f</span>, <span class="number">0xa6</span>,</span><br><span class="line">    <span class="number">0x47</span>, <span class="number">0x07</span>, <span class="number">0xa7</span>, <span class="number">0xfc</span>, <span class="number">0xf3</span>, <span class="number">0x73</span>, <span class="number">0x17</span>, <span class="number">0xba</span>,</span><br><span class="line">    <span class="number">0x83</span>, <span class="number">0x59</span>, <span class="number">0x3c</span>, <span class="number">0x19</span>, <span class="number">0xe6</span>, <span class="number">0x85</span>, <span class="number">0x4f</span>, <span class="number">0xa8</span>,</span><br><span class="line">    <span class="number">0x68</span>, <span class="number">0x6b</span>, <span class="number">0x81</span>, <span class="number">0xb2</span>, <span class="number">0x71</span>, <span class="number">0x64</span>, <span class="number">0xda</span>, <span class="number">0x8b</span>,</span><br><span class="line">    <span class="number">0xf8</span>, <span class="number">0xeb</span>, <span class="number">0x0f</span>, <span class="number">0x4b</span>, <span class="number">0x70</span>, <span class="number">0x56</span>, <span class="number">0x9d</span>, <span class="number">0x35</span>,</span><br><span class="line">    <span class="number">0x1e</span>, <span class="number">0x24</span>, <span class="number">0x0e</span>, <span class="number">0x5e</span>, <span class="number">0x63</span>, <span class="number">0x58</span>, <span class="number">0xd1</span>, <span class="number">0xa2</span>,</span><br><span class="line">    <span class="number">0x25</span>, <span class="number">0x22</span>, <span class="number">0x7c</span>, <span class="number">0x3b</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x78</span>, <span class="number">0x87</span>,</span><br><span class="line">    <span class="number">0xd4</span>, <span class="number">0x00</span>, <span class="number">0x46</span>, <span class="number">0x57</span>, <span class="number">0x9f</span>, <span class="number">0xd3</span>, <span class="number">0x27</span>, <span class="number">0x52</span>,</span><br><span class="line">    <span class="number">0x4c</span>, <span class="number">0x36</span>, <span class="number">0x02</span>, <span class="number">0xe7</span>, <span class="number">0xa0</span>, <span class="number">0xc4</span>, <span class="number">0xc8</span>, <span class="number">0x9e</span>,</span><br><span class="line">    <span class="number">0xea</span>, <span class="number">0xbf</span>, <span class="number">0x8a</span>, <span class="number">0xd2</span>, <span class="number">0x40</span>, <span class="number">0xc7</span>, <span class="number">0x38</span>, <span class="number">0xb5</span>,</span><br><span class="line">    <span class="number">0xa3</span>, <span class="number">0xf7</span>, <span class="number">0xf2</span>, <span class="number">0xce</span>, <span class="number">0xf9</span>, <span class="number">0x61</span>, <span class="number">0x15</span>, <span class="number">0xa1</span>,</span><br><span class="line">    <span class="number">0xe0</span>, <span class="number">0xae</span>, <span class="number">0x5d</span>, <span class="number">0xa4</span>, <span class="number">0x9b</span>, <span class="number">0x34</span>, <span class="number">0x1a</span>, <span class="number">0x55</span>,</span><br><span class="line">    <span class="number">0xad</span>, <span class="number">0x93</span>, <span class="number">0x32</span>, <span class="number">0x30</span>, <span class="number">0xf5</span>, <span class="number">0x8c</span>, <span class="number">0xb1</span>, <span class="number">0xe3</span>,</span><br><span class="line">    <span class="number">0x1d</span>, <span class="number">0xf6</span>, <span class="number">0xe2</span>, <span class="number">0x2e</span>, <span class="number">0x82</span>, <span class="number">0x66</span>, <span class="number">0xca</span>, <span class="number">0x60</span>,</span><br><span class="line">    <span class="number">0xc0</span>, <span class="number">0x29</span>, <span class="number">0x23</span>, <span class="number">0xab</span>, <span class="number">0x0d</span>, <span class="number">0x53</span>, <span class="number">0x4e</span>, <span class="number">0x6f</span>,</span><br><span class="line">    <span class="number">0xd5</span>, <span class="number">0xdb</span>, <span class="number">0x37</span>, <span class="number">0x45</span>, <span class="number">0xde</span>, <span class="number">0xfd</span>, <span class="number">0x8e</span>, <span class="number">0x2f</span>,</span><br><span class="line">    <span class="number">0x03</span>, <span class="number">0xff</span>, <span class="number">0x6a</span>, <span class="number">0x72</span>, <span class="number">0x6d</span>, <span class="number">0x6c</span>, <span class="number">0x5b</span>, <span class="number">0x51</span>,</span><br><span class="line">    <span class="number">0x8d</span>, <span class="number">0x1b</span>, <span class="number">0xaf</span>, <span class="number">0x92</span>, <span class="number">0xbb</span>, <span class="number">0xdd</span>, <span class="number">0xbc</span>, <span class="number">0x7f</span>,</span><br><span class="line">    <span class="number">0x11</span>, <span class="number">0xd9</span>, <span class="number">0x5c</span>, <span class="number">0x41</span>, <span class="number">0x1f</span>, <span class="number">0x10</span>, <span class="number">0x5a</span>, <span class="number">0xd8</span>,</span><br><span class="line">    <span class="number">0x0a</span>, <span class="number">0xc1</span>, <span class="number">0x31</span>, <span class="number">0x88</span>, <span class="number">0xa5</span>, <span class="number">0xcd</span>, <span class="number">0x7b</span>, <span class="number">0xbd</span>,</span><br><span class="line">    <span class="number">0x2d</span>, <span class="number">0x74</span>, <span class="number">0xd0</span>, <span class="number">0x12</span>, <span class="number">0xb8</span>, <span class="number">0xe5</span>, <span class="number">0xb4</span>, <span class="number">0xb0</span>,</span><br><span class="line">    <span class="number">0x89</span>, <span class="number">0x69</span>, <span class="number">0x97</span>, <span class="number">0x4a</span>, <span class="number">0x0c</span>, <span class="number">0x96</span>, <span class="number">0x77</span>, <span class="number">0x7e</span>,</span><br><span class="line">    <span class="number">0x65</span>, <span class="number">0xb9</span>, <span class="number">0xf1</span>, <span class="number">0x09</span>, <span class="number">0xc5</span>, <span class="number">0x6e</span>, <span class="number">0xc6</span>, <span class="number">0x84</span>,</span><br><span class="line">    <span class="number">0x18</span>, <span class="number">0xf0</span>, <span class="number">0x7d</span>, <span class="number">0xec</span>, <span class="number">0x3a</span>, <span class="number">0xdc</span>, <span class="number">0x4d</span>, <span class="number">0x20</span>,</span><br><span class="line">    <span class="number">0x79</span>, <span class="number">0xee</span>, <span class="number">0x5f</span>, <span class="number">0x3e</span>, <span class="number">0xd7</span>, <span class="number">0xcb</span>, <span class="number">0x39</span>, <span class="number">0x48</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">FK = [</span><br><span class="line">    <span class="number">0xa3b1bac6</span>, <span class="number">0x56aa3350</span>, <span class="number">0x677d9197</span>, <span class="number">0xb27022dc</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CK = [</span><br><span class="line">    <span class="number">0x00070e15</span>, <span class="number">0x1c232a31</span>, <span class="number">0x383f464d</span>, <span class="number">0x545b6269</span>,</span><br><span class="line">    <span class="number">0x70777e85</span>, <span class="number">0x8c939aa1</span>, <span class="number">0xa8afb6bd</span>, <span class="number">0xc4cbd2d9</span>,</span><br><span class="line">    <span class="number">0xe0e7eef5</span>, <span class="number">0xfc030a11</span>, <span class="number">0x181f262d</span>, <span class="number">0x343b4249</span>,</span><br><span class="line">    <span class="number">0x50575e65</span>, <span class="number">0x6c737a81</span>, <span class="number">0x888f969d</span>, <span class="number">0xa4abb2b9</span>,</span><br><span class="line">    <span class="number">0xc0c7ced5</span>, <span class="number">0xdce3eaf1</span>, <span class="number">0xf8ff060d</span>, <span class="number">0x141b2229</span>,</span><br><span class="line">    <span class="number">0x30373e45</span>, <span class="number">0x4c535a61</span>, <span class="number">0x686f767d</span>, <span class="number">0x848b9299</span>,</span><br><span class="line">    <span class="number">0xa0a7aeb5</span>, <span class="number">0xbcc3cad1</span>, <span class="number">0xd8dfe6ed</span>, <span class="number">0xf4fb0209</span>,</span><br><span class="line">    <span class="number">0x10171e25</span>, <span class="number">0x2c333a41</span>, <span class="number">0x484f565d</span>, <span class="number">0x646b7279</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rol</span>(<span class="params">x, n</span>):</span><br><span class="line">    <span class="keyword">return</span> ((x &lt;&lt; n) | (x &gt;&gt; (<span class="number">32</span> - n))) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sm4_box</span>(<span class="params">idx</span>):</span><br><span class="line">    <span class="keyword">return</span> Sbox[idx]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sm4_l</span>(<span class="params">t</span>):</span><br><span class="line">    <span class="keyword">return</span> t ^ rol(t, <span class="number">2</span>) ^ rol(t, <span class="number">10</span>) ^ rol(t, <span class="number">18</span>) ^ rol(t, <span class="number">24</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sm4_t</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> sm4_l(x) ^ rol(sm4_l(rol(x, <span class="number">13</span>) ^ rol(x, <span class="number">23</span>)), <span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sm4_key_schedule</span>(<span class="params">key</span>):</span><br><span class="line">    rk = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line">    k = [<span class="number">0</span>] * <span class="number">36</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        k[i] = key[i * <span class="number">4</span>] &lt;&lt; <span class="number">24</span> | key[i * <span class="number">4</span> + <span class="number">1</span>] &lt;&lt; <span class="number">16</span> | key[i * <span class="number">4</span> + <span class="number">2</span>] &lt;&lt; <span class="number">8</span> | key[i * <span class="number">4</span> + <span class="number">3</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        k[i + <span class="number">4</span>] = k[i] ^ sm4_t(k[i + <span class="number">1</span>] ^ k[i + <span class="number">2</span>] ^ k[i + <span class="number">3</span>] ^ CK[i])</span><br><span class="line">        rk[i] = k[i + <span class="number">4</span>]</span><br><span class="line">    <span class="keyword">return</span> rk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sm4_round</span>(<span class="params">x, rk</span>):</span><br><span class="line">    <span class="keyword">return</span> x ^ sm4_t(x ^ rol(x ^ rol(x ^ rol(x ^ rk, <span class="number">2</span>), <span class="number">10</span>), <span class="number">18</span>) ^ rol(x, <span class="number">24</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sm4_encrypt</span>(<span class="params">plain, key</span>):</span><br><span class="line">    rk = sm4_key_schedule(key)</span><br><span class="line">    x = plain[<span class="number">0</span>] &lt;&lt; <span class="number">24</span> | plain[<span class="number">1</span>] &lt;&lt; <span class="number">16</span> | plain[<span class="number">2</span>] &lt;&lt; <span class="number">8</span> | plain[<span class="number">3</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        x = sm4_round(x, rk[i])</span><br><span class="line">    result = [</span><br><span class="line">        (x &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xFF</span>,</span><br><span class="line">        (x &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>,</span><br><span class="line">        (x &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>,</span><br><span class="line">        x &amp; <span class="number">0xFF</span></span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    plaintext = [<span class="number">0x01</span>, <span class="number">0x23</span>, <span class="number">0x45</span>, <span class="number">0x67</span>]</span><br><span class="line">    key = [<span class="number">0x01</span>, <span class="number">0x23</span>, <span class="number">0x45</span>, <span class="number">0x67</span>] * <span class="number">4</span></span><br><span class="line">    ciphertext = sm4_encrypt(plaintext, key)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Ciphertext:&quot;</span>, ciphertext)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    <category term="编程" scheme="http://stevezjq.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="密码学" scheme="http://stevezjq.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>python实现维吉尼亚密码</title>
    <link href="http://stevezjq.github.io/posts/adc85227.html"/>
    <id>http://stevezjq.github.io/posts/adc85227.html</id>
    <published>2024-03-27T08:07:10.000Z</published>
    <updated>2024-03-27T08:55:24.261Z</updated>
    
    <content type="html"><![CDATA[<p>points：<br><div class="note info flat"><p>1.ASCII码的转换</p></div><br><div class="note info flat"><p>2.对input函数的理解</p></div><br><div class="note info flat"><p>3.append函数的使用</p></div></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import getch</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_str</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;please input plaintext:&quot;</span>)</span><br><span class="line">    chars = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">        <span class="built_in">str</span>.append(char)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_secret_key</span>(<span class="params">ints</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;please input secret key:&quot;</span>)</span><br><span class="line">    keys = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> keys:</span><br><span class="line">        <span class="built_in">int</span> = <span class="built_in">ord</span>(key) - <span class="number">97</span></span><br><span class="line">        ints.append(<span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encryption</span>(<span class="params"><span class="built_in">str</span>, ints, en_str</span>):</span><br><span class="line">    ints_length = <span class="built_in">len</span>(ints)</span><br><span class="line">    str_length = <span class="built_in">len</span>(<span class="built_in">str</span>)</span><br><span class="line">    a = <span class="built_in">int</span>(str_length / ints_length)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, a):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ints_length):</span><br><span class="line">            <span class="comment"># if str[i * j] == &quot;&quot;:</span></span><br><span class="line">            <span class="comment">#     break</span></span><br><span class="line">            temp_ascii = <span class="built_in">ord</span>(<span class="built_in">str</span>[i + j*(ints_length)])</span><br><span class="line">            temp_int = (temp_ascii + ints[i] - <span class="number">97</span>)%<span class="number">26</span></span><br><span class="line">            temp_char = <span class="built_in">chr</span>(temp_int+<span class="number">65</span>)</span><br><span class="line">            en_str.append(temp_char)</span><br><span class="line">    b=str_length-ints_length*a</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,b):</span><br><span class="line">        temp_ascii = <span class="built_in">ord</span>(<span class="built_in">str</span>[ints_length*a+i])</span><br><span class="line">        temp_int = (temp_ascii + ints[i] - <span class="number">97</span>) % <span class="number">26</span></span><br><span class="line">        temp_char = <span class="built_in">chr</span>(temp_int + <span class="number">65</span>)</span><br><span class="line">        en_str.append(temp_char)</span><br><span class="line">    <span class="keyword">for</span> element <span class="keyword">in</span> en_str:</span><br><span class="line">        <span class="built_in">print</span>(element, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">str</span> = []</span><br><span class="line">    ints = []</span><br><span class="line">    en_str = []</span><br><span class="line">    get_str(<span class="built_in">str</span>)</span><br><span class="line">    get_secret_key(ints)</span><br><span class="line">    encryption(<span class="built_in">str</span>, ints, en_str)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;points：&lt;br&gt;&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;1.ASCII码的转换&lt;/p&gt;
&lt;/div&gt;&lt;br&gt;&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;2.对input函数的理解&lt;/p&gt;
&lt;/div&gt;&lt;br&gt;&lt;div class</summary>
      
    
    
    
    <category term="编程" scheme="http://stevezjq.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="密码学" scheme="http://stevezjq.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>C语言实现凯撒密码（入门）</title>
    <link href="http://stevezjq.github.io/posts/d32097ac.html"/>
    <id>http://stevezjq.github.io/posts/d32097ac.html</id>
    <published>2024-03-11T06:49:12.000Z</published>
    <updated>2024-05-07T04:26:39.686Z</updated>
    
    <content type="html"><![CDATA[<p>水一篇文章—-<br>很简单:)</p><p>关键点：<br><div class="note info flat"><p>1.fgets函数的使用</p></div><br><div class="note info flat"><p>2.ASCII码</p></div><br><div class="note info flat"><p>3.可使用malloc语句为字符数组进行动态内存分配</p></div></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input:\n&quot;</span>);</span><br><span class="line"><span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line">fgets(str, <span class="keyword">sizeof</span>(str), <span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">while</span> (str[i + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((str[i] &lt;= <span class="string">&#x27;c&#x27;</span> &amp;&amp; str[i] &gt;= <span class="string">&#x27;a&#x27;</span>) || (str[i] &lt;= <span class="string">&#x27;C&#x27;</span> &amp;&amp; str[i] &gt;= <span class="string">&#x27;A&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">str[i] = str[i] + <span class="number">23</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, str[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((str[i] &gt;= <span class="string">&#x27;d&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;z&#x27;</span>) || (str[i] &gt;= <span class="string">&#x27;D&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, str[i] - <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (str[i] == (<span class="type">char</span>)<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;水一篇文章—-&lt;br&gt;很简单:)&lt;/p&gt;
&lt;p&gt;关键点：&lt;br&gt;&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;1.fgets函数的使用&lt;/p&gt;
&lt;/div&gt;&lt;br&gt;&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;2.ASCII码&lt;/p&gt;
&lt;/d</summary>
      
    
    
    
    <category term="编程" scheme="http://stevezjq.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="密码学" scheme="http://stevezjq.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>个人对AMD和NVIDIA显卡的浅谈和比较</title>
    <link href="http://stevezjq.github.io/posts/52e36df5.html"/>
    <id>http://stevezjq.github.io/posts/52e36df5.html</id>
    <published>2024-02-21T09:23:35.000Z</published>
    <updated>2024-05-16T04:49:53.064Z</updated>
    
    <content type="html"><![CDATA[<div class="note warning modern"><p>写前叠甲：本人对显卡了解不是非常深刻，发表的观点仅个人看法，如有疑问或意见敬请讨论</p></div><ol><li>传统性能：<br>在上一代30系和6000系的对决中，双方卡皇3090ti和6950xt可以说是打的难分难解。其中，90ti以其强大的传统性能和24g显存在ai领域大展身手，6950xt以其便宜的价格称霸高端游戏显卡，至今仍是4000价位（二手）显卡的推荐。<br>而对于去年推出的40系和7000系，AMD在旗舰显卡上黯然失色。黄皮衣刀客一刀砍出的4090领先上代旗舰接近2倍的性能，timespy跑分接近40000领先7900xtx一万    多，以至于在旗舰市场几乎所有的用户都选择了n卡。</li><li>规格参数：<br>n卡在旗舰用料确实很足，但在甜品卡和入门卡用料却非常吝啬。例如今年争议非常大的4060ti和4070ti，一个作为2k大众卡一个作为4k大众卡，60ti给到的规格却只有128bit的位宽和8g显存，以至于部分3a在2k全高画质下会出现爆显存和卡顿的情况。70ti给到的也只有192bit的位宽和12g显存。一个接近3000的显卡在2k下不能畅玩，我想这是大部分60ti用户所诟病的。反观同性能的7700xt（192bit12g）和7900xt（320bit20g），规格参数完胜。<br><img src="https://s21.ax1x.com/2024/05/16/pknDwX6.jpg" alt=""></li><li>价格优势：<br>a卡一直有着“性价比”的美称，这是因为当两家显卡性能相同时，a卡的价格一般会低10%左右。例如热卖的4060ti和6750gre，二者性能相同，6750gre却只有4060的价格。高端市场的7900xtx（7000左右）和4080super（接近9000）也是如此。</li><li>游戏支持：<br>众所周知，自2017年之后a、n两家推出了超分辨率缩放功能：fsr和dlss。至今（24年4月）fsr已更新至fsr3.0，dlss已更新至dlss3.5。近几年的游戏普遍优化差，重点点名看门狗系列和美末，需要dlss这种物理外挂才能保持高帧率。在steam显卡占用排行榜中，n卡的占比超过7成，这也使得许多游戏偏n优化，只有dlss没有fsr，而dlss只有rtx显卡能用，gtx和a卡是不能使用的。许多网游例如永劫无间这种也是偏n优化。再来说说两家的黑科技帧生成，dlss3已有上百款游戏支持，而fsr3支持的游戏屈指可数。虽然有dlss转fsr的第三方补丁，效果肯定远不如原生的dlss3。<br><img src="https://s21.ax1x.com/2024/05/16/pknDBnK.jpg" alt=""></li><li>AI领域：<br>不做过多赘述，n卡的卖点之一就是他们的cuda核心，兼容一众的生产力软件。</li><li>一些谣言和误区：<br>1) a卡掉驱动：在5000系之后，a卡掉驱动的例子鲜为人知。不仅仅a，n卡也会掉，    在供电不足、超频、硬件损坏的情况下会大大增加掉驱动的概率。6000、7000系已经    做到了同n一样的稳定。<br>2) n卡颜色偏灰，a卡鲜艳：在nVidia图形设置中将颜色输出模式改为0-255完全。Amd    则是自动将其设为完全<br>3) n卡游戏画面糊，a卡清晰：amd驱动中会自动将游戏打上80%的锐化，n卡可alt+f3    手动加上锐化和使明朗。<br>4) n卡显存占用比a卡低，是不是n卡偷画质了？：a、n两家显存压缩技术不同，n    卡技术更成熟。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note warning modern&quot;&gt;&lt;p&gt;写前叠甲：本人对显卡了解不是非常深刻，发表的观点仅个人看法，如有疑问或意见敬请讨论&lt;/p&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;传统性能：&lt;br&gt;在上一代30系和6000系的对决中，双方卡皇3090ti和6950</summary>
      
    
    
    
    <category term="硬件" scheme="http://stevezjq.github.io/categories/%E7%A1%AC%E4%BB%B6/"/>
    
    
    <category term="显卡" scheme="http://stevezjq.github.io/tags/%E6%98%BE%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>快速开始</title>
    <link href="http://stevezjq.github.io/posts/9daba997.html"/>
    <id>http://stevezjq.github.io/posts/9daba997.html</id>
    <published>2024-01-07T03:40:08.000Z</published>
    <updated>2024-05-16T04:48:12.299Z</updated>
    
    <content type="html"><![CDATA[<div class="note success modern"><p>点击这里，选择你喜欢的话题</p></div><p>&nbsp------------------------------------------------------------------------------------------------------------------></p><div class="gallery-group-main"><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s21.ax1x.com/2024/03/07/pFsC3jJ.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">编程</div>  <p>开发中</p>  <a href='https://www.stevezjq.cn/categories/%E7%BC%96%E7%A8%8B/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s21.ax1x.com/2024/03/07/pFs9z7t.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">硬件</div>  <p>如果你对电脑硬件及数码设备感兴趣，点击这里</p>  <a href='https://www.stevezjq.cn/categories/%E7%A1%AC%E4%BB%B6/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s21.ax1x.com/2024/03/07/pFr6FQ1.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">游戏</div>  <p>如果你对游戏尤其是3A大作感兴趣，点击这里</p>  <a href='https://www.stevezjq.cn/game'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s21.ax1x.com/2024/03/07/pFsCUN6.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">生活</div>  <p>闲聊的地方</p>  <a href='https://www.stevezjq.cn/categories/%E7%94%9F%E6%B4%BB/'></a>  </figcaption>  </figure>  </div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note success modern&quot;&gt;&lt;p&gt;点击这里，选择你喜欢的话题&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp-----------------------------------------------------------------------</summary>
      
    
    
    
    <category term="生活" scheme="http://stevezjq.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="快速开始" scheme="http://stevezjq.github.io/tags/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/"/>
    
  </entry>
  
  <entry>
    <title>写在前面</title>
    <link href="http://stevezjq.github.io/posts/ca8bfdf3.html"/>
    <id>http://stevezjq.github.io/posts/ca8bfdf3.html</id>
    <published>2023-12-25T08:33:43.000Z</published>
    <updated>2024-05-16T04:50:07.525Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary disabled"><p>欢迎来到我的博客！</p></div><p>本站建立的初衷是，记录博主大学阶段所学、所看、所想之事物，若在今后人生中迷茫或入歧途，可打开本站重新寻找灵感。<br>同时，欢迎所有参观本站的朋友。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note primary disabled&quot;&gt;&lt;p&gt;欢迎来到我的博客！&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;本站建立的初衷是，记录博主大学阶段所学、所看、所想之事物，若在今后人生中迷茫或入歧途，可打开本站重新寻找灵感。&lt;br&gt;同时，欢迎所有参观本站的朋友。&lt;/p&gt;</summary>
      
    
    
    
    <category term="生活" scheme="http://stevezjq.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="http://stevezjq.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
